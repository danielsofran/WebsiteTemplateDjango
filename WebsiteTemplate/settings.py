"""
Django settings for WebsiteTemplate project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import datetime
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q8u)!0gahjt@bl(0p&k#-%2t&i-&$w!evv4^w*zq9ah#@@^-dl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'magazin',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WebsiteTemplate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebsiteTemplate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'magazin/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

class OwnSettings:
    showprice = True
    allowrating = False
    productimagepath = "Products/"

    class Navbar:
        title = u"Ie \xa0Romanească"
        color = (127, 255, 212, 0.95) # rgba
        #menuitemshtml = {"acasa": "",}
        @staticmethod
        def context():
            return {
                "navbartitle": OwnSettings.Navbar.title,
                "navbarcolor": OwnSettings.Navbar.color,
            }

    class SlideShow:
        path = MEDIA_ROOT+"\\SlideShow\\"
        duration = 10000 # millisecounds
        @staticmethod
        def context():
            return {
                "slideshowduration": OwnSettings.SlideShow.duration
            }

    class Footer:
        title = u"Art \xa0\xa0Traditional"
        credits = f"Drepturi de autor © {datetime.datetime.now().year}. Toate drepturile rezervate"
        imgsource = "/media/BannerR.png"
        @staticmethod
        def context():
            return {
                "footertitle": OwnSettings.Footer.title,
                "footercredits": OwnSettings.Footer.credits,
                "footerimgsource": OwnSettings.Footer.imgsource,
            }

    class Card:
        pass

    @staticmethod
    def context():
        return {
            "showprice": OwnSettings.showprice,
            "allowrating": OwnSettings.allowrating,
            **OwnSettings.Navbar.context(),
            **OwnSettings.SlideShow.context(),
            **OwnSettings.Footer.context(),
        }
