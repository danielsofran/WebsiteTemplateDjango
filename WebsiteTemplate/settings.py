"""
Django settings for WebsiteTemplate project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import datetime
import json
import os
from pathlib import Path
import jsonpickle

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from magazin.utils import isLight

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q8u)!0gahjt@bl(0p&k#-%2t&i-&$w!evv4^w*zq9ah#@@^-dl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'magazin',
    'loginapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WebsiteTemplate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebsiteTemplate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'magazin/static/')
STATIC_URL = 'magazin/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

def init_settings(save=False):
    ownsettings = dict(jsonpath="OwnSettings/ownsettings.json",
                       showprice=True,
                       allowrating=False,
                       title="Art Traditional",
                       productimagepath="Products/",
                       navbar=dict(jsonpath="OwnSettings/navbarsettings.json",
                                   title=u"Ie \xa0Romanească",
                                   titlefont="Alex Brush",
                                   fontmultiplier=200,
                                   titlecolor=(0, 0, 0, 1),
                                   itemcolor=(77, 77, 77, 0.8),
                                   itemhovercolor=(179, 179, 179, 0.9),
                                   color=(127, 255, 212, 0.95),
                                   islight=isLight((127, 255, 212, 0.95)),
                                   hidelogin=False),
                       slideshow=dict(jsonpath="OwnSettings/slideshowsettings.json",
                                      imgpath=MEDIA_ROOT + "\\SlideShow\\",
                                      duration=10000,
                                      maxheight=500,
                                      breakpoint=1000),
                       footer=dict(jsonpath="OwnSettings/footersettings.json",
                                   title=u"Art \xa0\xa0Traditional",
                                   titlefont="Alex Brush",
                                   fontmultiplier=200,
                                   fcolor=(255, 255, 255, 1),
                                   bgcolor=(33, 37, 41, 1),
                                   credits=f"Drepturi de autor © {datetime.datetime.now().year}. Toate drepturile rezervate",
                                   imgsource="/media/BannerR.png"),
                       card=dict(jsonpath="OwnSettings/cardsettings.json",
                                 color=(255, 255, 255, 0),
                                 islight=isLight((255, 255, 255, 0)),
                                 showtitle=True,
                                 titlecolor=(0, 0, 0, 1),
                                 titlealign="center",
                                 showprice=True,
                                 finalpricecolor=(0, 0, 0, 1),
                                 reducerecolor=(255, 26, 26, 1),
                                 initialpretcolor=(0, 0, 0, 1),
                                 showdescription=True,
                                 showimage=True,
                                 starscolor=(255, 255, 0, 1),
                                 specificatii="marime gen rating"),
                       galerie=dict(jsonpath="OwnSettings/galeriesettings.json",
                                    pretmin=50,
                                    pretmax=2000,
                                    pas=50),
                       )
